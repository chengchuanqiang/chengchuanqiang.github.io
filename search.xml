<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>superset windows开发环境搭建</title>
    <url>/2019/11/14/superset-windows%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h2 id="SuperSet-Windows开发环境搭建"><a href="#SuperSet-Windows开发环境搭建" class="headerlink" title="SuperSet Windows开发环境搭建"></a>SuperSet Windows开发环境搭建</h2><h3 id="写在前面的话"><a href="#写在前面的话" class="headerlink" title="写在前面的话"></a>写在前面的话</h3><p>superset官方安装配置指南：<br><a href="https://superset.incubator.apache.org/installation.html" target="_blank" rel="noopener">https://superset.incubator.apache.org/installation.html</a></p>
<h3 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h3><ol>
<li><p>安装Python环境：SuperSet官方要求Python版本必须在3.6及其上，我本次安装版本为3.6.6；<br>下载地址为：<a href="https://www.python.org/ftp/python/3.6.6/python-3.6.6-amd64.exe" target="_blank" rel="noopener">https://www.python.org/ftp/python/3.6.6/python-3.6.6-amd64.exe</a></p>
</li>
<li><p>安装PyCharm编译器：直接去官网下载；<br>下载地址：<a href="https://www.jetbrains.com/pycharm/download/download-thanks.html?platform=windows" target="_blank" rel="noopener">https://www.jetbrains.com/pycharm/download/download-thanks.html?platform=windows</a></p>
</li>
<li><p>安装C++ buildTools：编译环境需要；<br>下载地址：<a href="http://go.microsoft.com/fwlink/?LinkId=691126" target="_blank" rel="noopener">http://go.microsoft.com/fwlink/?LinkId=691126</a></p>
</li>
<li><p>安装nodejs：由于SuperSet的前端会用到nodejs，所以需要安装nodejs的windows版本；<br>下载地址：<a href="https://nodejs.org/dist/v12.4.0/node-v12.4.0-x64.msi" target="_blank" rel="noopener">https://nodejs.org/dist/v12.4.0/node-v12.4.0-x64.msi</a></p>
</li>
</ol>
<h3 id="后端代码编译"><a href="#后端代码编译" class="headerlink" title="后端代码编译"></a>后端代码编译</h3><ol>
<li><p>新建工作目录，例如：D:\workspace\pythonwork，将SuperSet项目clone到本地；</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/apache/incubator-superset.git</span><br></pre></td></tr></table></figure></li>
<li><p>执行命令，安装Python虚拟环境控件；<br>使用pip安装软件时，会比较慢，可以设置pip为国镜像：<br>清华镜像：<a href="https://pypi.tuna.tsinghua.edu.cn/simple/" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple/</a><br>阿里云镜像：<a href="https://mirrors.aliyun.com/pypi/simple/" target="_blank" rel="noopener">https://mirrors.aliyun.com/pypi/simple/</a><br>豆瓣镜像：<a href="http://pypi.douban.com/simple/" target="_blank" rel="noopener">http://pypi.douban.com/simple/</a><br>中科大镜像：<a href="https://pypi.mirrors.ustc.edu.cn/simple/" target="_blank" rel="noopener">https://pypi.mirrors.ustc.edu.cn/simple/</a></p>
<p>以下直接设置pip清华镜像为全局配置：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">pip install virtualenv</span><br></pre></td></tr></table></figure></li>
<li><p>设置虚拟环境，并激活进入虚拟环境；</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd incubator-superset </span><br><span class="line">virtualenv env </span><br><span class="line">.\env\Scripts\activate</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装依赖</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br><span class="line">pip install -r requirements-dev.txt</span><br></pre></td></tr></table></figure>
</li>
<li><p>制作软链接；<br>由于clone下来的源代码superset\static\assets这个软链接可以在linux或Mac上能正常运行，但是在windows上不能正常运行，所以需要制作windows下的软链接；<br>删除：D:\workspace\pythonwork\incubator-superset\superset\static\assets文件<br>在doc命令行中输入以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mklink /J &quot;D:\workspace\pythonwork\incubator-superset\superset\static\assets&quot; &quot;D:\workspace\pythonwork\incubator-superset\superset\assets&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装SuperSet开发者模式；</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install -e .</span><br></pre></td></tr></table></figure>
</li>
<li><p>初始化SuperSet相关信息，需要进入到superset/bin目录下进行：</p>
<ul>
<li>创建管理员账号，设置账号、密码、邮箱；</li>
<li>初始化数据库；</li>
<li>创建角色权限；</li>
<li>加载示例数据；<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">fabmanager create-admin --app superset</span><br><span class="line">python superset db upgrade</span><br><span class="line">python superset init</span><br><span class="line">python superset load_examples</span><br></pre></td></tr></table></figure>
注：默认使用sqlite数据库，可以修改配置文件superset/config.py设置为mysql数据库；<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">SQLALCHEMY_DATABASE_URI = <span class="string">'mysql+pymysql://root:123456@localhost/superset'</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>启动SuperSet后端服务</p>
<ul>
<li>打开PyCharm编译器，导入SuperSet项目</li>
<li>在incubator-superset/superset目录下新建run.py文件，右键run/debug run启动即可，等到前端编译完成之后，访问 <a href="http://localhost:8088即可到登录页面" target="_blank" rel="noopener">http://localhost:8088即可到登录页面</a><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> superset <span class="keyword">import</span> app </span><br><span class="line">app.run(debug=<span class="literal">True</span>, host=<span class="string">'0.0.0.0'</span>, port=<span class="number">8088</span>)</span><br></pre></td></tr></table></figure>

</li>
</ul>
</li>
</ol>
<h3 id="前端代码编译"><a href="#前端代码编译" class="headerlink" title="前端代码编译"></a>前端代码编译</h3><p>以下操作需要进入：superset/assets目录下；</p>
<ol>
<li>安装编译需要的模块<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -d</span><br></pre></td></tr></table></figure>
注：npm 是随同 nodejs 一起安装的包管理工具，我们经常使用它来下载第三方包到本地。但在使用 npm 过程很多人估计都知道，在国内下载第三方包的速度极其之慢。可以使用淘宝 npm 镜像定制的 cnpm (gzip 压缩支持) 命令行工具代替默认的 npm；<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
这样就可以使用 cnpm 命令来安装模块了<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cnpm install [name]</span><br></pre></td></tr></table></figure></li>
<li>修改package.json的第17行（这里是设置变量，但是此命令在linux和Mac是可以通过的，windows不能通过），在NODE_ENV前面添加set，即<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;build&quot;: &quot;set NODE_ENV=production webpack --mode=production --colors --progress&quot;,</span><br></pre></td></tr></table></figure></li>
<li>编译前端文件，并进入前端开发者模式；<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm run build </span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure>
注：运行完npm run dev，在命令窗口会停止到，不要误以为是执行不下去，保持窗口开启状态即可，一有文件变动时，它会重新编译；</li>
</ol>
]]></content>
      <categories>
        <category>superset</category>
      </categories>
      <tags>
        <tag>superset</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/11/06/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
