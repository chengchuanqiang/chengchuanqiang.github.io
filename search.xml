<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>责任链设计模式（Chain of Responsibility）</title>
    <url>/2020/11/07/%E8%B4%A3%E4%BB%BB%E9%93%BE%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h1><p>为了避免请求发送者和多个请求处理者耦合在一起，将所有请求的处理者通过前一对象记住其下一个对象的引用而连成一条链，当有请求发生时，可以沿着这条链传递，直到有对象处理它为止；</p>
<p>责任链设计模式主要包含以下角色：</p>
<p><strong>抽象处理者（Handler）角色</strong>：定义一个处理的接口，包含抽象处理方法和后继的连接；</p>
<p><strong>具体处理者（Concrete Handler）角色</strong>：实现抽象处理者的处理方法，判断是否处理本次请求，如果可以处理请求则处理，否则将该请求转给它的后继者；</p>
<p><strong>客户类（Client）角色</strong>：创建处理链，并向链头的具体处理者对象提交请求，它关心处理细节和请求的过程；</p>
<h1 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h1><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul>
<li><strong>降低了请求发送者和请求处理者之间的耦合度</strong>。该模式使得请求发送者无须知道是哪一个对象处理其请求以及链的结构，发送者和接受者也无须拥有对方的明确信息；</li>
<li><strong>增强了系统的可扩展性</strong>。可以根据需求随时增加新的请求处理类，满足开闭原则；</li>
<li><strong>增强了给对象指派职责的灵活性</strong>。当工作流程发生变化时，可以动态地改变链内的成员或者它们的次序，也可以动态的新增和删除链内的成员；</li>
<li><strong>简化了对象之间的连接</strong>。每个对象只需保持一个指向其后继者的引用，不需要保持其他所有处理者的引用，也避免使用众多的if或者if…else语句；</li>
<li><strong>责任分担明确，每个处理者专注于做自己的事情</strong>。每个处理者只需要处理自己该处理的工作，不该处理的传递给下一个处理者完成，明确各个类的职责范围，符合类的单一职责原则；</li>
</ul>
<h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><ul>
<li>不能保证每一个请求一定被处理。由于一个请求没有明确的接受者，所以不能保证它一定被处理，该请求可能一直传到链的末端都得不到处理；</li>
<li>对于比较长的责任链，请求的处理可能涉及多个处理对象，系统性能将受到一定的影响；</li>
<li>职责链建立的合理性要靠客户端来保证，增加了客户端的复杂性，可能由于职责链的错误设置导致系统出错，如造成循环使用；</li>
</ul>
<h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><p>基础类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Request</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 绑定通知渠道（微信、短信）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> ChannelTypeEnum channel;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 具体消息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Response</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 响应结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> success;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 结果编码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提示信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer msg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> ChannelTypeEnum &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 渠道类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    WE_CHAT(<span class="number">1</span>, <span class="string">"微信"</span>),</span><br><span class="line">    SMS(<span class="number">2</span>, <span class="string">"短信"</span>),</span><br><span class="line">    OTHER(<span class="number">3</span>, <span class="string">"第三方平台"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String desc;</span><br><span class="line"></span><br><span class="line">    ChannelTypeEnum(Integer id, String desc) &#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.desc = desc;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="实现方式一"><a href="#实现方式一" class="headerlink" title="实现方式一"></a>实现方式一</h2><p><img src="/images/%E8%B4%A3%E4%BB%BB%E9%93%BE%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8Fv1.png" alt="责任链设计模式v1"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseMessageHandler</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 下一个执行者</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> BaseMessageHandler nextMessageHandler;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BaseMessageHandler</span><span class="params">(BaseMessageHandler nextMessageHandler)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.nextMessageHandler = nextMessageHandler;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doHandle</span><span class="params">(Request request, Response response)</span> </span>&#123;</span><br><span class="line">        handle(request, response);</span><br><span class="line">        <span class="keyword">if</span> (response.isSuccess()) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (nextMessageHandler != <span class="keyword">null</span>) &#123;</span><br><span class="line">            nextMessageHandler.doHandle(request, response);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 实际操作</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request  request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response response</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(Request request, Response response)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WeChatMessageHandler</span> <span class="keyword">extends</span> <span class="title">BaseMessageHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">WeChatMessageHandler</span><span class="params">(BaseMessageHandler nextMessageHandler)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(nextMessageHandler);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(Request request, Response response)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (ChannelTypeEnum.WE_CHAT.equals(request.getChannel())) &#123;</span><br><span class="line">            System.out.println(request.getChannel().getDesc() + <span class="string">"："</span> + request.getMessage());</span><br><span class="line">            response.setSuccess(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SmsMessageHandler</span> <span class="keyword">extends</span> <span class="title">BaseMessageHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SmsMessageHandler</span><span class="params">(BaseMessageHandler nextMessageHandler)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(nextMessageHandler);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(Request request, Response response)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (ChannelTypeEnum.SMS.equals(request.getChannel())) &#123;</span><br><span class="line">            System.out.println(request.getChannel().getDesc() + <span class="string">"："</span> + request.getMessage());</span><br><span class="line">            response.setSuccess(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OtherMessageHandler</span> <span class="keyword">extends</span> <span class="title">BaseMessageHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">OtherMessageHandler</span><span class="params">(BaseMessageHandler nextMessageHandler)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(nextMessageHandler);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(Request request, Response response)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (ChannelTypeEnum.OTHER.equals(request.getChannel())) &#123;</span><br><span class="line">            System.out.println(request.getChannel().getDesc() + <span class="string">"："</span> + request.getMessage());</span><br><span class="line">            response.setSuccess(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> BaseMessageHandler <span class="title">buildHandlerChain</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        OtherMessageHandler otherMessageHandler = <span class="keyword">new</span> OtherMessageHandler(<span class="keyword">null</span>);</span><br><span class="line">        SmsMessageHandler smsMessageHandler = <span class="keyword">new</span> SmsMessageHandler(otherMessageHandler);</span><br><span class="line">        WeChatMessageHandler weChatMessageHandler = <span class="keyword">new</span> WeChatMessageHandler(smsMessageHandler);</span><br><span class="line">        <span class="keyword">return</span> weChatMessageHandler;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Client client = <span class="keyword">new</span> Client();</span><br><span class="line">        BaseMessageHandler baseMessageHandler = client.buildHandlerChain();</span><br><span class="line">        Request request = <span class="keyword">new</span> Request(ChannelTypeEnum.WE_CHAT, <span class="string">"有内鬼，交易取消"</span>);</span><br><span class="line">        Response response = <span class="keyword">new</span> Response();</span><br><span class="line">        baseMessageHandler.doHandle(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="实现方式二"><a href="#实现方式二" class="headerlink" title="实现方式二"></a>实现方式二</h2><p><img src="/images/%E8%B4%A3%E4%BB%BB%E9%93%BE%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8Fv2.png" alt="责任链设计模式v2"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MessageChain</span> <span class="keyword">implements</span> <span class="title">IChain</span>&lt;<span class="title">Request</span>, <span class="title">Response</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;IMessageHandler&gt; messageHandlerList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="comment">// 这里也可以用index下标实现，保存当前位置，我觉得用iterator实现更优雅</span></span><br><span class="line">    <span class="keyword">private</span> Iterator&lt;IMessageHandler&gt; iterator;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addMessageHandler</span><span class="params">(IMessageHandler messageHandler)</span> </span>&#123;</span><br><span class="line">        messageHandlerList.add(messageHandler);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doHandle</span><span class="params">(Request request, Response response)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == iterator) &#123;</span><br><span class="line">            iterator = messageHandlerList.iterator();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (iterator.hasNext()) &#123;</span><br><span class="line">            IMessageHandler messageHandler = iterator.next();</span><br><span class="line">            messageHandler.handle(request, response, <span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IMessageHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 数据实际处理</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request      request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response     response</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> messageChain messageChain</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">handle</span><span class="params">(Request request, Response response, MessageChain messageChain)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WeChatMessageHandler</span> <span class="keyword">implements</span> <span class="title">IMessageHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(Request request, Response response, MessageChain messageChain)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (ChannelTypeEnum.WE_CHAT.equals(request.getChannel())) &#123;</span><br><span class="line">            System.out.println(request.getChannel().getDesc() + <span class="string">"："</span> + request.getMessage());</span><br><span class="line">            response.setSuccess(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        messageChain.doHandle(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SmsMessageHandler</span> <span class="keyword">implements</span> <span class="title">IMessageHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(Request request, Response response, MessageChain messageChain)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (ChannelTypeEnum.SMS.equals(request.getChannel())) &#123;</span><br><span class="line">            System.out.println(request.getChannel().getDesc() + <span class="string">"："</span> + request.getMessage());</span><br><span class="line">            response.setSuccess(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        messageChain.doHandle(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OtherMessageHandler</span> <span class="keyword">implements</span> <span class="title">IMessageHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(Request request, Response response, MessageChain messageChain)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (ChannelTypeEnum.OTHER.equals(request.getChannel())) &#123;</span><br><span class="line">            System.out.println(request.getChannel().getDesc() + <span class="string">"："</span> + request.getMessage());</span><br><span class="line">            response.setSuccess(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        messageChain.doHandle(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h1><p><img src="/images%5C%E8%B4%A3%E4%BB%BB%E9%93%BE%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%BA%90%E7%A0%81.png" alt="责任链设计模式源码"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">VirtualFilterChain</span> <span class="keyword">implements</span> <span class="title">FilterChain</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> FilterChain originalChain;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> List&lt;? extends Filter&gt; additionalFilters;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> currentPosition = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">VirtualFilterChain</span><span class="params">(FilterChain chain, List&lt;? extends Filter&gt; additionalFilters)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.originalChain = chain;</span><br><span class="line">        <span class="keyword">this</span>.additionalFilters = additionalFilters;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用index下标实现</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(<span class="keyword">final</span> ServletRequest request, <span class="keyword">final</span> ServletResponse response)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.currentPosition == <span class="keyword">this</span>.additionalFilters.size()) &#123;</span><br><span class="line">            <span class="keyword">this</span>.originalChain.doFilter(request, response);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.currentPosition++;</span><br><span class="line">            Filter nextFilter = <span class="keyword">this</span>.additionalFilters.get(<span class="keyword">this</span>.currentPosition - <span class="number">1</span>);</span><br><span class="line">            nextFilter.doFilter(request, response, <span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MockFilterChain</span> <span class="keyword">implements</span> <span class="title">FilterChain</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="keyword">private</span> ServletRequest request;</span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="keyword">private</span> ServletResponse response;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> List&lt;Filter&gt; filters;</span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="keyword">private</span> Iterator&lt;Filter&gt; iterator;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MockFilterChain</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.filters = Collections.emptyList();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MockFilterChain</span><span class="params">(Servlet servlet)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.filters = initFilterList(servlet);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MockFilterChain</span><span class="params">(Servlet servlet, Filter... filters)</span> </span>&#123;</span><br><span class="line">        Assert.notNull(filters, <span class="string">"filters cannot be null"</span>);</span><br><span class="line">        Assert.noNullElements(filters, <span class="string">"filters cannot contain null values"</span>);</span><br><span class="line">        <span class="keyword">this</span>.filters = initFilterList(servlet, filters);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;Filter&gt; <span class="title">initFilterList</span><span class="params">(Servlet servlet, Filter... filters)</span> </span>&#123;</span><br><span class="line">        Filter[] allFilters = (Filter[]) ObjectUtils.addObjectToArray(filters, <span class="keyword">new</span> MockFilterChain.ServletFilterProxy(servlet));</span><br><span class="line">        <span class="keyword">return</span> Arrays.asList(allFilters);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletRequest <span class="title">getRequest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.request;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletResponse <span class="title">getResponse</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.response;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用 iterator实现</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        Assert.notNull(request, <span class="string">"Request must not be null"</span>);</span><br><span class="line">        Assert.notNull(response, <span class="string">"Response must not be null"</span>);</span><br><span class="line">        Assert.state(<span class="keyword">this</span>.request == <span class="keyword">null</span>, <span class="string">"This FilterChain has already been called!"</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.iterator == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.iterator = <span class="keyword">this</span>.filters.iterator();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.iterator.hasNext()) &#123;</span><br><span class="line">            Filter nextFilter = (Filter) <span class="keyword">this</span>.iterator.next();</span><br><span class="line">            nextFilter.doFilter(request, response, <span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.request = request;</span><br><span class="line">        <span class="keyword">this</span>.response = response;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>superset windows开发环境搭建</title>
    <url>/2019/11/14/superset-windows%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h2 id="SuperSet-Windows开发环境搭建"><a href="#SuperSet-Windows开发环境搭建" class="headerlink" title="SuperSet Windows开发环境搭建"></a>SuperSet Windows开发环境搭建</h2><h3 id="写在前面的话"><a href="#写在前面的话" class="headerlink" title="写在前面的话"></a>写在前面的话</h3><p>superset官方安装配置指南：<br><a href="https://superset.incubator.apache.org/installation.html" target="_blank" rel="noopener">https://superset.incubator.apache.org/installation.html</a></p>
<h3 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h3><ol>
<li><p>安装Python环境：SuperSet官方要求Python版本必须在3.6及其上，我本次安装版本为3.6.6；<br>下载地址为：<a href="https://www.python.org/ftp/python/3.6.6/python-3.6.6-amd64.exe" target="_blank" rel="noopener">https://www.python.org/ftp/python/3.6.6/python-3.6.6-amd64.exe</a></p>
</li>
<li><p>安装PyCharm编译器：直接去官网下载；<br>下载地址：<a href="https://www.jetbrains.com/pycharm/download/download-thanks.html?platform=windows" target="_blank" rel="noopener">https://www.jetbrains.com/pycharm/download/download-thanks.html?platform=windows</a></p>
</li>
<li><p>安装C++ buildTools：编译环境需要；<br>下载地址：<a href="http://go.microsoft.com/fwlink/?LinkId=691126" target="_blank" rel="noopener">http://go.microsoft.com/fwlink/?LinkId=691126</a></p>
</li>
<li><p>安装nodejs：由于SuperSet的前端会用到nodejs，所以需要安装nodejs的windows版本；<br>下载地址：<a href="https://nodejs.org/dist/v12.4.0/node-v12.4.0-x64.msi" target="_blank" rel="noopener">https://nodejs.org/dist/v12.4.0/node-v12.4.0-x64.msi</a></p>
</li>
</ol>
<h3 id="后端代码编译"><a href="#后端代码编译" class="headerlink" title="后端代码编译"></a>后端代码编译</h3><ol>
<li><p>新建工作目录，例如：D:\workspace\pythonwork，将SuperSet项目clone到本地；</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/apache/incubator-superset.git</span><br></pre></td></tr></table></figure></li>
<li><p>执行命令，安装Python虚拟环境控件；<br>使用pip安装软件时，会比较慢，可以设置pip为国镜像：<br>清华镜像：<a href="https://pypi.tuna.tsinghua.edu.cn/simple/" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple/</a><br>阿里云镜像：<a href="https://mirrors.aliyun.com/pypi/simple/" target="_blank" rel="noopener">https://mirrors.aliyun.com/pypi/simple/</a><br>豆瓣镜像：<a href="http://pypi.douban.com/simple/" target="_blank" rel="noopener">http://pypi.douban.com/simple/</a><br>中科大镜像：<a href="https://pypi.mirrors.ustc.edu.cn/simple/" target="_blank" rel="noopener">https://pypi.mirrors.ustc.edu.cn/simple/</a></p>
<p>以下直接设置pip清华镜像为全局配置：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">pip install virtualenv</span><br></pre></td></tr></table></figure></li>
<li><p>设置虚拟环境，并激活进入虚拟环境；</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd incubator-superset </span><br><span class="line">virtualenv env </span><br><span class="line">.\env\Scripts\activate</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装依赖</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br><span class="line">pip install -r requirements-dev.txt</span><br></pre></td></tr></table></figure>
</li>
<li><p>制作软链接；<br>由于clone下来的源代码superset\static\assets这个软链接可以在linux或Mac上能正常运行，但是在windows上不能正常运行，所以需要制作windows下的软链接；<br>删除：D:\workspace\pythonwork\incubator-superset\superset\static\assets文件<br>在doc命令行中输入以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mklink /J &quot;D:\workspace\pythonwork\incubator-superset\superset\static\assets&quot; &quot;D:\workspace\pythonwork\incubator-superset\superset\assets&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装SuperSet开发者模式；</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install -e .</span><br></pre></td></tr></table></figure>
</li>
<li><p>初始化SuperSet相关信息，需要进入到superset/bin目录下进行：</p>
<ul>
<li>创建管理员账号，设置账号、密码、邮箱；</li>
<li>初始化数据库；</li>
<li>创建角色权限；</li>
<li>加载示例数据；<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">fabmanager create-admin --app superset</span><br><span class="line">python superset db upgrade</span><br><span class="line">python superset init</span><br><span class="line">python superset load_examples</span><br></pre></td></tr></table></figure>
注：默认使用sqlite数据库，可以修改配置文件superset/config.py设置为mysql数据库；<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">SQLALCHEMY_DATABASE_URI = <span class="string">'mysql+pymysql://root:123456@localhost/superset'</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>启动SuperSet后端服务</p>
<ul>
<li>打开PyCharm编译器，导入SuperSet项目</li>
<li>在incubator-superset/superset目录下新建run.py文件，右键run/debug run启动即可，等到前端编译完成之后，访问 <a href="http://localhost:8088即可到登录页面" target="_blank" rel="noopener">http://localhost:8088即可到登录页面</a><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> superset <span class="keyword">import</span> app </span><br><span class="line">app.run(debug=<span class="literal">True</span>, host=<span class="string">'0.0.0.0'</span>, port=<span class="number">8088</span>)</span><br></pre></td></tr></table></figure>

</li>
</ul>
</li>
</ol>
<h3 id="前端代码编译"><a href="#前端代码编译" class="headerlink" title="前端代码编译"></a>前端代码编译</h3><p>以下操作需要进入：superset/assets目录下；</p>
<ol>
<li>安装编译需要的模块<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -d</span><br></pre></td></tr></table></figure>
注：npm 是随同 nodejs 一起安装的包管理工具，我们经常使用它来下载第三方包到本地。但在使用 npm 过程很多人估计都知道，在国内下载第三方包的速度极其之慢。可以使用淘宝 npm 镜像定制的 cnpm (gzip 压缩支持) 命令行工具代替默认的 npm；<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
这样就可以使用 cnpm 命令来安装模块了<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cnpm install [name]</span><br></pre></td></tr></table></figure></li>
<li>修改package.json的第17行（这里是设置变量，但是此命令在linux和Mac是可以通过的，windows不能通过），在NODE_ENV前面添加set，即<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;build&quot;: &quot;set NODE_ENV=production webpack --mode=production --colors --progress&quot;,</span><br></pre></td></tr></table></figure></li>
<li>编译前端文件，并进入前端开发者模式；<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm run build </span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure>
注：运行完npm run dev，在命令窗口会停止到，不要误以为是执行不下去，保持窗口开启状态即可，一有文件变动时，它会重新编译；</li>
</ol>
]]></content>
      <categories>
        <category>superset</category>
      </categories>
      <tags>
        <tag>superset</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/11/06/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a><br><img src="/images/avatar.png" alt="哈哈哈"></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
